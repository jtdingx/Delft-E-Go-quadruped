
"""
Auto-generated by CVXPYgen on February 01, 2024 at 16:52:30.
Content: Custom solve method for CVXPY interface.
"""

import time
import warnings
import numpy as np
from cvxpy.reductions import Solution
from cvxpy.problems.problem import SolverStats
from .home.jiatao.Documents.unitree_sdk_hardware_test.go1_remote_control.src.unitree_ros_to_real.unitree_legged_real.src.mosek_nlp_kmp.src.hardware_jump import cpg_module


def cpg_solve(prob, updated_params=None, **kwargs):

    # set flags for updated parameters
    upd = cpg_module.cpg_updated()
    if updated_params is None:
        updated_params = ["X_ref", "R", "R_grf", "x_init", "A", "no_contact"]
    for p in updated_params:
        try:
            setattr(upd, p, True)
        except AttributeError:
            raise(AttributeError("%s is not a parameter." % p))

    # set solver settings
    cpg_module.set_solver_default_settings()
    for key, value in kwargs.items():
        try:
            eval('cpg_module.set_solver_%s(value)' % key)
        except AttributeError:
            raise(AttributeError('Solver setting "%s" not available.' % key))

    # set parameter values
    par = cpg_module.cpg_params()
    par.X_ref = list(prob.param_dict['X_ref'].value.flatten(order='F'))
    par.R = list(prob.param_dict['R'].value.flatten(order='F'))
    par.R_grf = list(prob.param_dict['R_grf'].value.flatten(order='F'))
    par.x_init = list(prob.param_dict['x_init'].value.flatten(order='F'))
    par.A = list(prob.param_dict['A'].value.flatten(order='F'))
    par.no_contact = list(prob.param_dict['no_contact'].value.flatten(order='F'))

    # solve
    t0 = time.time()
    res = cpg_module.solve(upd, par)
    t1 = time.time()

    # store solution in problem object
    prob._clear_solution()
    prob.var_dict['X'].value = np.array(res.cpg_prim.X).reshape((12, 11), order='F')
    prob.var_dict['U'].value = np.array(res.cpg_prim.U).reshape((6, 10), order='F')
    prob.var_dict['F'].value = np.array(res.cpg_prim.F).reshape((12, 10), order='F')
    prob.constraints[0].save_dual_value(np.array(res.cpg_dual.d0).reshape(12))
    prob.constraints[1].save_dual_value(np.array(res.cpg_dual.d1).reshape((12, 10), order='F'))
    prob.constraints[2].save_dual_value(np.array(res.cpg_dual.d2).reshape(3))
    prob.constraints[3].save_dual_value(np.array(res.cpg_dual.d3).reshape(3))
    prob.constraints[4].save_dual_value(np.array(res.cpg_dual.d4))
    prob.constraints[5].save_dual_value(np.array(res.cpg_dual.d5))
    prob.constraints[6].save_dual_value(np.array(res.cpg_dual.d6))
    prob.constraints[7].save_dual_value(np.array(res.cpg_dual.d7))
    prob.constraints[8].save_dual_value(np.array(res.cpg_dual.d8))
    prob.constraints[9].save_dual_value(np.array(res.cpg_dual.d9))
    prob.constraints[10].save_dual_value(np.array(res.cpg_dual.d10))
    prob.constraints[11].save_dual_value(np.array(res.cpg_dual.d11))
    prob.constraints[12].save_dual_value(np.array(res.cpg_dual.d12))
    prob.constraints[13].save_dual_value(np.array(res.cpg_dual.d13))
    prob.constraints[14].save_dual_value(np.array(res.cpg_dual.d14))
    prob.constraints[15].save_dual_value(np.array(res.cpg_dual.d15))
    prob.constraints[16].save_dual_value(np.array(res.cpg_dual.d16))
    prob.constraints[17].save_dual_value(np.array(res.cpg_dual.d17))
    prob.constraints[18].save_dual_value(np.array(res.cpg_dual.d18))
    prob.constraints[19].save_dual_value(np.array(res.cpg_dual.d19))
    prob.constraints[20].save_dual_value(np.array(res.cpg_dual.d20))
    prob.constraints[21].save_dual_value(np.array(res.cpg_dual.d21))
    prob.constraints[22].save_dual_value(np.array(res.cpg_dual.d22))
    prob.constraints[23].save_dual_value(np.array(res.cpg_dual.d23))
    prob.constraints[24].save_dual_value(np.array(res.cpg_dual.d24))
    prob.constraints[25].save_dual_value(np.array(res.cpg_dual.d25))
    prob.constraints[26].save_dual_value(np.array(res.cpg_dual.d26))
    prob.constraints[27].save_dual_value(np.array(res.cpg_dual.d27))
    prob.constraints[28].save_dual_value(np.array(res.cpg_dual.d28))
    prob.constraints[29].save_dual_value(np.array(res.cpg_dual.d29))
    prob.constraints[30].save_dual_value(np.array(res.cpg_dual.d30))
    prob.constraints[31].save_dual_value(np.array(res.cpg_dual.d31))
    prob.constraints[32].save_dual_value(np.array(res.cpg_dual.d32).reshape(3))
    prob.constraints[33].save_dual_value(np.array(res.cpg_dual.d33).reshape(3))
    prob.constraints[34].save_dual_value(np.array(res.cpg_dual.d34))
    prob.constraints[35].save_dual_value(np.array(res.cpg_dual.d35))
    prob.constraints[36].save_dual_value(np.array(res.cpg_dual.d36))
    prob.constraints[37].save_dual_value(np.array(res.cpg_dual.d37))
    prob.constraints[38].save_dual_value(np.array(res.cpg_dual.d38))
    prob.constraints[39].save_dual_value(np.array(res.cpg_dual.d39))
    prob.constraints[40].save_dual_value(np.array(res.cpg_dual.d40))
    prob.constraints[41].save_dual_value(np.array(res.cpg_dual.d41))
    prob.constraints[42].save_dual_value(np.array(res.cpg_dual.d42))
    prob.constraints[43].save_dual_value(np.array(res.cpg_dual.d43))
    prob.constraints[44].save_dual_value(np.array(res.cpg_dual.d44))
    prob.constraints[45].save_dual_value(np.array(res.cpg_dual.d45))
    prob.constraints[46].save_dual_value(np.array(res.cpg_dual.d46))
    prob.constraints[47].save_dual_value(np.array(res.cpg_dual.d47))
    prob.constraints[48].save_dual_value(np.array(res.cpg_dual.d48))
    prob.constraints[49].save_dual_value(np.array(res.cpg_dual.d49))
    prob.constraints[50].save_dual_value(np.array(res.cpg_dual.d50))
    prob.constraints[51].save_dual_value(np.array(res.cpg_dual.d51))
    prob.constraints[52].save_dual_value(np.array(res.cpg_dual.d52))
    prob.constraints[53].save_dual_value(np.array(res.cpg_dual.d53))
    prob.constraints[54].save_dual_value(np.array(res.cpg_dual.d54))
    prob.constraints[55].save_dual_value(np.array(res.cpg_dual.d55))
    prob.constraints[56].save_dual_value(np.array(res.cpg_dual.d56))
    prob.constraints[57].save_dual_value(np.array(res.cpg_dual.d57))
    prob.constraints[58].save_dual_value(np.array(res.cpg_dual.d58))
    prob.constraints[59].save_dual_value(np.array(res.cpg_dual.d59))
    prob.constraints[60].save_dual_value(np.array(res.cpg_dual.d60))
    prob.constraints[61].save_dual_value(np.array(res.cpg_dual.d61))
    prob.constraints[62].save_dual_value(np.array(res.cpg_dual.d62).reshape(3))
    prob.constraints[63].save_dual_value(np.array(res.cpg_dual.d63).reshape(3))
    prob.constraints[64].save_dual_value(np.array(res.cpg_dual.d64))
    prob.constraints[65].save_dual_value(np.array(res.cpg_dual.d65))
    prob.constraints[66].save_dual_value(np.array(res.cpg_dual.d66))
    prob.constraints[67].save_dual_value(np.array(res.cpg_dual.d67))
    prob.constraints[68].save_dual_value(np.array(res.cpg_dual.d68))
    prob.constraints[69].save_dual_value(np.array(res.cpg_dual.d69))
    prob.constraints[70].save_dual_value(np.array(res.cpg_dual.d70))
    prob.constraints[71].save_dual_value(np.array(res.cpg_dual.d71))
    prob.constraints[72].save_dual_value(np.array(res.cpg_dual.d72))
    prob.constraints[73].save_dual_value(np.array(res.cpg_dual.d73))
    prob.constraints[74].save_dual_value(np.array(res.cpg_dual.d74))
    prob.constraints[75].save_dual_value(np.array(res.cpg_dual.d75))
    prob.constraints[76].save_dual_value(np.array(res.cpg_dual.d76))
    prob.constraints[77].save_dual_value(np.array(res.cpg_dual.d77))
    prob.constraints[78].save_dual_value(np.array(res.cpg_dual.d78))
    prob.constraints[79].save_dual_value(np.array(res.cpg_dual.d79))
    prob.constraints[80].save_dual_value(np.array(res.cpg_dual.d80))
    prob.constraints[81].save_dual_value(np.array(res.cpg_dual.d81))
    prob.constraints[82].save_dual_value(np.array(res.cpg_dual.d82))
    prob.constraints[83].save_dual_value(np.array(res.cpg_dual.d83))
    prob.constraints[84].save_dual_value(np.array(res.cpg_dual.d84))
    prob.constraints[85].save_dual_value(np.array(res.cpg_dual.d85))
    prob.constraints[86].save_dual_value(np.array(res.cpg_dual.d86))
    prob.constraints[87].save_dual_value(np.array(res.cpg_dual.d87))
    prob.constraints[88].save_dual_value(np.array(res.cpg_dual.d88))
    prob.constraints[89].save_dual_value(np.array(res.cpg_dual.d89))
    prob.constraints[90].save_dual_value(np.array(res.cpg_dual.d90))
    prob.constraints[91].save_dual_value(np.array(res.cpg_dual.d91))
    prob.constraints[92].save_dual_value(np.array(res.cpg_dual.d92).reshape(3))
    prob.constraints[93].save_dual_value(np.array(res.cpg_dual.d93).reshape(3))
    prob.constraints[94].save_dual_value(np.array(res.cpg_dual.d94))
    prob.constraints[95].save_dual_value(np.array(res.cpg_dual.d95))
    prob.constraints[96].save_dual_value(np.array(res.cpg_dual.d96))
    prob.constraints[97].save_dual_value(np.array(res.cpg_dual.d97))
    prob.constraints[98].save_dual_value(np.array(res.cpg_dual.d98))
    prob.constraints[99].save_dual_value(np.array(res.cpg_dual.d99))
    prob.constraints[100].save_dual_value(np.array(res.cpg_dual.d100))
    prob.constraints[101].save_dual_value(np.array(res.cpg_dual.d101))
    prob.constraints[102].save_dual_value(np.array(res.cpg_dual.d102))
    prob.constraints[103].save_dual_value(np.array(res.cpg_dual.d103))
    prob.constraints[104].save_dual_value(np.array(res.cpg_dual.d104))
    prob.constraints[105].save_dual_value(np.array(res.cpg_dual.d105))
    prob.constraints[106].save_dual_value(np.array(res.cpg_dual.d106))
    prob.constraints[107].save_dual_value(np.array(res.cpg_dual.d107))
    prob.constraints[108].save_dual_value(np.array(res.cpg_dual.d108))
    prob.constraints[109].save_dual_value(np.array(res.cpg_dual.d109))
    prob.constraints[110].save_dual_value(np.array(res.cpg_dual.d110))
    prob.constraints[111].save_dual_value(np.array(res.cpg_dual.d111))
    prob.constraints[112].save_dual_value(np.array(res.cpg_dual.d112))
    prob.constraints[113].save_dual_value(np.array(res.cpg_dual.d113))
    prob.constraints[114].save_dual_value(np.array(res.cpg_dual.d114))
    prob.constraints[115].save_dual_value(np.array(res.cpg_dual.d115))
    prob.constraints[116].save_dual_value(np.array(res.cpg_dual.d116))
    prob.constraints[117].save_dual_value(np.array(res.cpg_dual.d117))
    prob.constraints[118].save_dual_value(np.array(res.cpg_dual.d118))
    prob.constraints[119].save_dual_value(np.array(res.cpg_dual.d119))
    prob.constraints[120].save_dual_value(np.array(res.cpg_dual.d120))
    prob.constraints[121].save_dual_value(np.array(res.cpg_dual.d121))
    prob.constraints[122].save_dual_value(np.array(res.cpg_dual.d122).reshape(3))
    prob.constraints[123].save_dual_value(np.array(res.cpg_dual.d123).reshape(3))
    prob.constraints[124].save_dual_value(np.array(res.cpg_dual.d124))
    prob.constraints[125].save_dual_value(np.array(res.cpg_dual.d125))
    prob.constraints[126].save_dual_value(np.array(res.cpg_dual.d126))
    prob.constraints[127].save_dual_value(np.array(res.cpg_dual.d127))
    prob.constraints[128].save_dual_value(np.array(res.cpg_dual.d128))
    prob.constraints[129].save_dual_value(np.array(res.cpg_dual.d129))
    prob.constraints[130].save_dual_value(np.array(res.cpg_dual.d130))
    prob.constraints[131].save_dual_value(np.array(res.cpg_dual.d131))
    prob.constraints[132].save_dual_value(np.array(res.cpg_dual.d132))
    prob.constraints[133].save_dual_value(np.array(res.cpg_dual.d133))
    prob.constraints[134].save_dual_value(np.array(res.cpg_dual.d134))
    prob.constraints[135].save_dual_value(np.array(res.cpg_dual.d135))
    prob.constraints[136].save_dual_value(np.array(res.cpg_dual.d136))
    prob.constraints[137].save_dual_value(np.array(res.cpg_dual.d137))
    prob.constraints[138].save_dual_value(np.array(res.cpg_dual.d138))
    prob.constraints[139].save_dual_value(np.array(res.cpg_dual.d139))
    prob.constraints[140].save_dual_value(np.array(res.cpg_dual.d140))
    prob.constraints[141].save_dual_value(np.array(res.cpg_dual.d141))
    prob.constraints[142].save_dual_value(np.array(res.cpg_dual.d142))
    prob.constraints[143].save_dual_value(np.array(res.cpg_dual.d143))
    prob.constraints[144].save_dual_value(np.array(res.cpg_dual.d144))
    prob.constraints[145].save_dual_value(np.array(res.cpg_dual.d145))
    prob.constraints[146].save_dual_value(np.array(res.cpg_dual.d146))
    prob.constraints[147].save_dual_value(np.array(res.cpg_dual.d147))
    prob.constraints[148].save_dual_value(np.array(res.cpg_dual.d148))
    prob.constraints[149].save_dual_value(np.array(res.cpg_dual.d149))
    prob.constraints[150].save_dual_value(np.array(res.cpg_dual.d150))
    prob.constraints[151].save_dual_value(np.array(res.cpg_dual.d151))
    prob.constraints[152].save_dual_value(np.array(res.cpg_dual.d152).reshape(3))
    prob.constraints[153].save_dual_value(np.array(res.cpg_dual.d153).reshape(3))
    prob.constraints[154].save_dual_value(np.array(res.cpg_dual.d154))
    prob.constraints[155].save_dual_value(np.array(res.cpg_dual.d155))
    prob.constraints[156].save_dual_value(np.array(res.cpg_dual.d156))
    prob.constraints[157].save_dual_value(np.array(res.cpg_dual.d157))
    prob.constraints[158].save_dual_value(np.array(res.cpg_dual.d158))
    prob.constraints[159].save_dual_value(np.array(res.cpg_dual.d159))
    prob.constraints[160].save_dual_value(np.array(res.cpg_dual.d160))
    prob.constraints[161].save_dual_value(np.array(res.cpg_dual.d161))
    prob.constraints[162].save_dual_value(np.array(res.cpg_dual.d162))
    prob.constraints[163].save_dual_value(np.array(res.cpg_dual.d163))
    prob.constraints[164].save_dual_value(np.array(res.cpg_dual.d164))
    prob.constraints[165].save_dual_value(np.array(res.cpg_dual.d165))
    prob.constraints[166].save_dual_value(np.array(res.cpg_dual.d166))
    prob.constraints[167].save_dual_value(np.array(res.cpg_dual.d167))
    prob.constraints[168].save_dual_value(np.array(res.cpg_dual.d168))
    prob.constraints[169].save_dual_value(np.array(res.cpg_dual.d169))
    prob.constraints[170].save_dual_value(np.array(res.cpg_dual.d170))
    prob.constraints[171].save_dual_value(np.array(res.cpg_dual.d171))
    prob.constraints[172].save_dual_value(np.array(res.cpg_dual.d172))
    prob.constraints[173].save_dual_value(np.array(res.cpg_dual.d173))
    prob.constraints[174].save_dual_value(np.array(res.cpg_dual.d174))
    prob.constraints[175].save_dual_value(np.array(res.cpg_dual.d175))
    prob.constraints[176].save_dual_value(np.array(res.cpg_dual.d176))
    prob.constraints[177].save_dual_value(np.array(res.cpg_dual.d177))
    prob.constraints[178].save_dual_value(np.array(res.cpg_dual.d178))
    prob.constraints[179].save_dual_value(np.array(res.cpg_dual.d179))
    prob.constraints[180].save_dual_value(np.array(res.cpg_dual.d180))
    prob.constraints[181].save_dual_value(np.array(res.cpg_dual.d181))
    prob.constraints[182].save_dual_value(np.array(res.cpg_dual.d182).reshape(3))
    prob.constraints[183].save_dual_value(np.array(res.cpg_dual.d183).reshape(3))
    prob.constraints[184].save_dual_value(np.array(res.cpg_dual.d184))
    prob.constraints[185].save_dual_value(np.array(res.cpg_dual.d185))
    prob.constraints[186].save_dual_value(np.array(res.cpg_dual.d186))
    prob.constraints[187].save_dual_value(np.array(res.cpg_dual.d187))
    prob.constraints[188].save_dual_value(np.array(res.cpg_dual.d188))
    prob.constraints[189].save_dual_value(np.array(res.cpg_dual.d189))
    prob.constraints[190].save_dual_value(np.array(res.cpg_dual.d190))
    prob.constraints[191].save_dual_value(np.array(res.cpg_dual.d191))
    prob.constraints[192].save_dual_value(np.array(res.cpg_dual.d192))
    prob.constraints[193].save_dual_value(np.array(res.cpg_dual.d193))
    prob.constraints[194].save_dual_value(np.array(res.cpg_dual.d194))
    prob.constraints[195].save_dual_value(np.array(res.cpg_dual.d195))
    prob.constraints[196].save_dual_value(np.array(res.cpg_dual.d196))
    prob.constraints[197].save_dual_value(np.array(res.cpg_dual.d197))
    prob.constraints[198].save_dual_value(np.array(res.cpg_dual.d198))
    prob.constraints[199].save_dual_value(np.array(res.cpg_dual.d199))
    prob.constraints[200].save_dual_value(np.array(res.cpg_dual.d200))
    prob.constraints[201].save_dual_value(np.array(res.cpg_dual.d201))
    prob.constraints[202].save_dual_value(np.array(res.cpg_dual.d202))
    prob.constraints[203].save_dual_value(np.array(res.cpg_dual.d203))
    prob.constraints[204].save_dual_value(np.array(res.cpg_dual.d204))
    prob.constraints[205].save_dual_value(np.array(res.cpg_dual.d205))
    prob.constraints[206].save_dual_value(np.array(res.cpg_dual.d206))
    prob.constraints[207].save_dual_value(np.array(res.cpg_dual.d207))
    prob.constraints[208].save_dual_value(np.array(res.cpg_dual.d208))
    prob.constraints[209].save_dual_value(np.array(res.cpg_dual.d209))
    prob.constraints[210].save_dual_value(np.array(res.cpg_dual.d210))
    prob.constraints[211].save_dual_value(np.array(res.cpg_dual.d211))
    prob.constraints[212].save_dual_value(np.array(res.cpg_dual.d212).reshape(3))
    prob.constraints[213].save_dual_value(np.array(res.cpg_dual.d213).reshape(3))
    prob.constraints[214].save_dual_value(np.array(res.cpg_dual.d214))
    prob.constraints[215].save_dual_value(np.array(res.cpg_dual.d215))
    prob.constraints[216].save_dual_value(np.array(res.cpg_dual.d216))
    prob.constraints[217].save_dual_value(np.array(res.cpg_dual.d217))
    prob.constraints[218].save_dual_value(np.array(res.cpg_dual.d218))
    prob.constraints[219].save_dual_value(np.array(res.cpg_dual.d219))
    prob.constraints[220].save_dual_value(np.array(res.cpg_dual.d220))
    prob.constraints[221].save_dual_value(np.array(res.cpg_dual.d221))
    prob.constraints[222].save_dual_value(np.array(res.cpg_dual.d222))
    prob.constraints[223].save_dual_value(np.array(res.cpg_dual.d223))
    prob.constraints[224].save_dual_value(np.array(res.cpg_dual.d224))
    prob.constraints[225].save_dual_value(np.array(res.cpg_dual.d225))
    prob.constraints[226].save_dual_value(np.array(res.cpg_dual.d226))
    prob.constraints[227].save_dual_value(np.array(res.cpg_dual.d227))
    prob.constraints[228].save_dual_value(np.array(res.cpg_dual.d228))
    prob.constraints[229].save_dual_value(np.array(res.cpg_dual.d229))
    prob.constraints[230].save_dual_value(np.array(res.cpg_dual.d230))
    prob.constraints[231].save_dual_value(np.array(res.cpg_dual.d231))
    prob.constraints[232].save_dual_value(np.array(res.cpg_dual.d232))
    prob.constraints[233].save_dual_value(np.array(res.cpg_dual.d233))
    prob.constraints[234].save_dual_value(np.array(res.cpg_dual.d234))
    prob.constraints[235].save_dual_value(np.array(res.cpg_dual.d235))
    prob.constraints[236].save_dual_value(np.array(res.cpg_dual.d236))
    prob.constraints[237].save_dual_value(np.array(res.cpg_dual.d237))
    prob.constraints[238].save_dual_value(np.array(res.cpg_dual.d238))
    prob.constraints[239].save_dual_value(np.array(res.cpg_dual.d239))
    prob.constraints[240].save_dual_value(np.array(res.cpg_dual.d240))
    prob.constraints[241].save_dual_value(np.array(res.cpg_dual.d241))
    prob.constraints[242].save_dual_value(np.array(res.cpg_dual.d242).reshape(3))
    prob.constraints[243].save_dual_value(np.array(res.cpg_dual.d243).reshape(3))
    prob.constraints[244].save_dual_value(np.array(res.cpg_dual.d244))
    prob.constraints[245].save_dual_value(np.array(res.cpg_dual.d245))
    prob.constraints[246].save_dual_value(np.array(res.cpg_dual.d246))
    prob.constraints[247].save_dual_value(np.array(res.cpg_dual.d247))
    prob.constraints[248].save_dual_value(np.array(res.cpg_dual.d248))
    prob.constraints[249].save_dual_value(np.array(res.cpg_dual.d249))
    prob.constraints[250].save_dual_value(np.array(res.cpg_dual.d250))
    prob.constraints[251].save_dual_value(np.array(res.cpg_dual.d251))
    prob.constraints[252].save_dual_value(np.array(res.cpg_dual.d252))
    prob.constraints[253].save_dual_value(np.array(res.cpg_dual.d253))
    prob.constraints[254].save_dual_value(np.array(res.cpg_dual.d254))
    prob.constraints[255].save_dual_value(np.array(res.cpg_dual.d255))
    prob.constraints[256].save_dual_value(np.array(res.cpg_dual.d256))
    prob.constraints[257].save_dual_value(np.array(res.cpg_dual.d257))
    prob.constraints[258].save_dual_value(np.array(res.cpg_dual.d258))
    prob.constraints[259].save_dual_value(np.array(res.cpg_dual.d259))
    prob.constraints[260].save_dual_value(np.array(res.cpg_dual.d260))
    prob.constraints[261].save_dual_value(np.array(res.cpg_dual.d261))
    prob.constraints[262].save_dual_value(np.array(res.cpg_dual.d262))
    prob.constraints[263].save_dual_value(np.array(res.cpg_dual.d263))
    prob.constraints[264].save_dual_value(np.array(res.cpg_dual.d264))
    prob.constraints[265].save_dual_value(np.array(res.cpg_dual.d265))
    prob.constraints[266].save_dual_value(np.array(res.cpg_dual.d266))
    prob.constraints[267].save_dual_value(np.array(res.cpg_dual.d267))
    prob.constraints[268].save_dual_value(np.array(res.cpg_dual.d268))
    prob.constraints[269].save_dual_value(np.array(res.cpg_dual.d269))
    prob.constraints[270].save_dual_value(np.array(res.cpg_dual.d270))
    prob.constraints[271].save_dual_value(np.array(res.cpg_dual.d271))
    prob.constraints[272].save_dual_value(np.array(res.cpg_dual.d272).reshape(3))
    prob.constraints[273].save_dual_value(np.array(res.cpg_dual.d273).reshape(3))
    prob.constraints[274].save_dual_value(np.array(res.cpg_dual.d274))
    prob.constraints[275].save_dual_value(np.array(res.cpg_dual.d275))
    prob.constraints[276].save_dual_value(np.array(res.cpg_dual.d276))
    prob.constraints[277].save_dual_value(np.array(res.cpg_dual.d277))
    prob.constraints[278].save_dual_value(np.array(res.cpg_dual.d278))
    prob.constraints[279].save_dual_value(np.array(res.cpg_dual.d279))
    prob.constraints[280].save_dual_value(np.array(res.cpg_dual.d280))
    prob.constraints[281].save_dual_value(np.array(res.cpg_dual.d281))
    prob.constraints[282].save_dual_value(np.array(res.cpg_dual.d282))
    prob.constraints[283].save_dual_value(np.array(res.cpg_dual.d283))
    prob.constraints[284].save_dual_value(np.array(res.cpg_dual.d284))
    prob.constraints[285].save_dual_value(np.array(res.cpg_dual.d285))
    prob.constraints[286].save_dual_value(np.array(res.cpg_dual.d286))
    prob.constraints[287].save_dual_value(np.array(res.cpg_dual.d287))
    prob.constraints[288].save_dual_value(np.array(res.cpg_dual.d288))
    prob.constraints[289].save_dual_value(np.array(res.cpg_dual.d289))
    prob.constraints[290].save_dual_value(np.array(res.cpg_dual.d290))
    prob.constraints[291].save_dual_value(np.array(res.cpg_dual.d291))
    prob.constraints[292].save_dual_value(np.array(res.cpg_dual.d292))
    prob.constraints[293].save_dual_value(np.array(res.cpg_dual.d293))
    prob.constraints[294].save_dual_value(np.array(res.cpg_dual.d294))
    prob.constraints[295].save_dual_value(np.array(res.cpg_dual.d295))
    prob.constraints[296].save_dual_value(np.array(res.cpg_dual.d296))
    prob.constraints[297].save_dual_value(np.array(res.cpg_dual.d297))
    prob.constraints[298].save_dual_value(np.array(res.cpg_dual.d298))
    prob.constraints[299].save_dual_value(np.array(res.cpg_dual.d299))
    prob.constraints[300].save_dual_value(np.array(res.cpg_dual.d300))
    prob.constraints[301].save_dual_value(np.array(res.cpg_dual.d301))

    # store additional solver information in problem object
    prob._status = res.cpg_info.status
    if abs(res.cpg_info.obj_val) == 1e30:
        prob._value = np.sign(res.cpg_info.obj_val)*np.inf
    else:
        prob._value = res.cpg_info.obj_val
    primal_vars = {var.id: var.value for var in prob.variables()}
    dual_vars = {c.id: c.dual_value for c in prob.constraints}
    solver_specific_stats = {'obj_val': res.cpg_info.obj_val,
                             'status': prob._status,
                             'iter': res.cpg_info.iter,
                             'pri_res': res.cpg_info.pri_res,
                             'dua_res': res.cpg_info.dua_res,
                             'time': res.cpg_info.time}
    attr = {'solve_time': t1-t0, 'solver_specific_stats': solver_specific_stats, 'num_iters': res.cpg_info.iter}
    prob._solution = Solution(prob.status, prob.value, primal_vars, dual_vars, attr)
    results_dict = {'solver_specific_stats': solver_specific_stats,
                    'num_iters': res.cpg_info.iter,
                    'solve_time': t1-t0}
    prob._solver_stats = SolverStats(results_dict, 'OSQP')

    return prob.value
